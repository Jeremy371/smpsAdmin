<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.humane.smps.mapper.CheckMapper">
    <select id="item" resultType="com.humane.smps.dto.CheckDto">
        SELECT *
        FROM
            (SELECT admission.admission_nm
                    , exam.type_nm
                    , exam_map.hall_date AS exam_date
                    , examinee.dept_nm
                    , examinee.major_nm
                    , exam.exam_nm
                    , hall.head_nm
                    , hall.bldg_nm
                    , hall.hall_nm
                    , examinee.examinee_cd
                    , exam_map.virt_no
                    , score.scorer_nm
                    , (SELECT COUNT(*) FROM item WHERE exam.exam_cd = item.exam_cd) AS item_cnt
                    , (score.score01 IS NOT NULL)
                        + (score.score02 IS NOT NULL)
                        + (score.score03 IS NOT NULL)
                        + (score.score04 IS NOT NULL)
                        + (score.score05 IS NOT NULL)
                        + (score.score06 IS NOT NULL)
                        + (score.score07 IS NOT NULL)
                        + (score.score08 IS NOT NULL)
                        + (score.score09 IS NOT NULL)
                        + (score.score10 IS NOT NULL) AS scored_cnt
                    , score.total_score
            FROM exam_map
            INNER JOIN exam ON exam_map.exam_cd = exam.exam_cd
            INNER JOIN hall ON exam_map.hall_cd = hall.hall_cd
            INNER JOIN examinee ON exam_map.examinee_cd = examinee.examinee_cd
            INNER JOIN admission ON admission.admission_cd = exam.admission_cd
            LEFT JOIN score ON exam_map.exam_cd = score.exam_cd AND exam_map.virt_no = score.virt_no
            <where>
                <if test="param != null">
                    <if test="param.userAdmissions != null">AND admission.admission_cd IN (${param.userAdmissions})</if>
                    <if test="param.admissionNm != null">AND admission.admission_nm = #{param.admissionNm}</if>
                    <if test="param.typeNm != null">AND exam.type_nm = #{param.typeNm}</if>
                    <if test="param.examDate != null">AND exam_map.hall_date = #{param.examDate}</if>
                    <if test="param.deptNm != null">AND examinee.dept_nm = #{param.deptNm}</if>
                    <if test="param.majorNm != null">AND examinee.major_nm = #{param.majorNm}</if>
                    <if test="param.headNm != null">AND hall.head_nm = #{param.headNm}</if>
                    <if test="param.bldgNm != null">AND hall.bldg_nm = #{param.bldgNm}</if>
                    <if test="param.hallNm != null">AND hall.hall_nm = #{param.hallNm}</if>
                    <if test="param.virtNo != null">AND exam_map.virt_no LIKE '%' #{param.virtNo} '%'</if>
                    <if test="param.scorerNm != null">AND score.scorer_nm LIKE '%' #{param.scorerNm} '%'</if>
                    <if test="param.isVirtNo != null">
                        <if test="param.isVirtNo == true">AND exam_map.virt_no IS NOT NULL</if>
                        <if test="param.isVirtNo == false">AND exam_map.virt_no IS NULL</if>
                    </if>
                </if>
            </where>
            GROUP BY
            admission.admission_nm
            , exam.type_nm
            , exam_map.hall_date
            , examinee.dept_nm
            , examinee.major_nm
            , exam.exam_nm
            , hall.head_nm
            , hall.bldg_nm
            , hall.hall_nm
            , examinee.examinee_cd
            , exam_map.virt_no
            , score.scorer_nm
            ) AS result
        WHERE result.item_cnt != scored_cnt AND result.virt_no IS NOT NULL AND result.total_score IS NOT NULL
    </select>

    <select id="scorer" resultType="com.humane.smps.dto.CheckDto">
        select admission.admission_nm
            , exam.type_nm
            , exam.exam_nm
            , exam_map.hall_date as exam_date
            , examinee.dept_nm
            , examinee.major_nm
            , hall.head_nm
            , hall.bldg_nm
            , hall.hall_nm
            , exam_map.examinee_cd
            , exam_map.virt_no
            , exam.scorer_cnt
            , count(score.scorer_nm) as scored_cnt
         from exam_map
         left join score on score.exam_cd = exam_map.exam_cd and score.hall_cd = exam_map.hall_cd and score.virt_no = exam_map.virt_no
        inner join exam on exam_map.exam_cd = exam.exam_cd
        inner join hall on exam_map.hall_cd = hall.hall_cd
        inner join admission on exam.admission_cd = admission.admission_cd
        inner join examinee on exam_map.examinee_cd = examinee.examinee_cd
        <where>
            AND exam_map.virt_no IS NOT NULL
            <if test="param != null">
                <if test="param.userAdmissions != null">AND admission.admission_cd IN (${param.userAdmissions})</if>
                <if test="param.admissionNm != null">AND admission.admission_nm = #{param.admissionNm}</if>
                <if test="param.typeNm != null">AND exam.type_nm = #{param.typeNm}</if>
                <if test="param.examDate != null">AND exam_map.hall_date = #{param.examDate}</if>
                <if test="param.deptNm != null">AND examinee.dept_nm = #{param.deptNm}</if>
                <if test="param.majorNm != null">AND examinee.major_nm = #{param.majorNm}</if>
                <if test="param.headNm != null">AND hall.head_nm = #{param.headNm}</if>
                <if test="param.bldgNm != null">AND hall.bldg_nm = #{param.bldgNm}</if>
                <if test="param.hallNm != null">AND hall.hall_nm = #{param.hallNm}</if>
                <if test="param.virtNo != null">AND exam_map.virt_no LIKE '%' #{param.virtNo} '%'</if>
                <if test="param.isVirtNo != null">
                    <if test="param.isVirtNo == true">AND exam_map.virt_no IS NOT NULL</if>
                    <if test="param.isVirtNo == false">AND exam_map.virt_no IS NULL</if>
                </if>
            </if>
        </where>
        group by admission.admission_nm
            , exam.type_nm
            , exam.exam_nm
            , exam_map.hall_date
            , examinee.dept_nm
            , examinee.major_nm
            , hall.head_nm
            , hall.bldg_nm
            , hall.hall_nm
            , exam_map.examinee_cd
            , exam_map.virt_no
            , exam.scorer_cnt
        having exam.scorer_cnt != count(score.scorer_nm) and count(score.scorer_nm) > 0
        /*having count(*) != count(score.scorer_nm)*/
    </select>

    <select id="getScorerCnt" resultType="java.lang.Long">
        SELECT max(cnt)
        FROM(SELECT count(*) AS cnt
            FROM(SELECT exam_hall_date.hall_date, exam_hall_date.hall_cd, scorer_nm
                    FROM score
                    INNER JOIN exam_hall_date ON exam_hall_date.hall_cd = score.hall_cd AND exam_hall_date.exam_cd = score.exam_cd
                    GROUP BY scorer_nm
                    ) AS tmp
            GROUP BY hall_date, hall_cd
        ) AS result
    </select>

    <select id="getItemCnt" resultType="java.lang.Long">
        SELECT max(cnt)
        FROM (
        SELECT count(*) AS cnt
        FROM item
        GROUP BY exam_cd
        ) a
    </select>

    <select id="scoredCnt" resultType="com.humane.util.CamelMap">
        select  admission.admission_nm
              , exam.type_nm, /*exam.exam_date,*/ e.hall_date as exam_date
              , hall.head_nm, hall.bldg_nm, hall.hall_nm
              , exam.scorer_cnt
              , e.scored_cnt, e.virt_no_cnt
              , e.scorer_nm1, e.scored_cnt1
              , e.scorer_nm2, e.scored_cnt2
              , e.scorer_nm3, e.scored_cnt3
              , e.scorer_nm4, e.scored_cnt4
              , e.scorer_nm5, e.scored_cnt5
          from ( select exam_hall_date.exam_cd, exam_hall_date.hall_cd, exam.scorer_cnt, exam_hall_date.hall_date
                         , if(scored_cnt1 != 0, 1, 0) + if(scored_cnt2 != 0, 1, 0) + if(scored_cnt3 != 0, 1, 0) + if(scored_cnt4 != 0, 1, 0) + if(scored_cnt5 != 0, 1, 0) as scored_cnt
                          , (select count(*) from exam_map where exam_hall_date.exam_cd = exam_map.exam_cd and exam_hall_date.hall_cd = exam_map.hall_cd and exam_hall_date.hall_date = exam_map.hall_date and virt_no is not null) as virt_no_cnt
                         , scorer_nm1, scored_cnt1
                         , scorer_nm2, scored_cnt2
                         , scorer_nm3, scored_cnt3
                         , scorer_nm4, scored_cnt4
                         , scorer_nm5, scored_cnt5
                      from exam_hall_date
                     inner join exam on exam.exam_cd = exam_hall_date.exam_cd
                      left join (select exam_cd, hall_cd, hall_date
                                     , min(if(rn = 1, scorer_nm, null)) as scorer_nm1, min(if(rn = 1, cnt, null)) as scored_cnt1
                                     , min(if(rn = 2, scorer_nm, null)) as scorer_nm2, min(if(rn = 2, cnt, null)) as scored_cnt2
                                     , min(if(rn = 3, scorer_nm, null)) as scorer_nm3, min(if(rn = 3, cnt, null)) as scored_cnt3
                                     , min(if(rn = 4, scorer_nm, null)) as scorer_nm4, min(if(rn = 4, cnt, null)) as scored_cnt4
                                     , min(if(rn = 5, scorer_nm, null)) as scorer_nm5, min(if(rn = 5, cnt, null)) as scored_cnt5
                                  from ( select a.*
                                                 , case when @prev_exam_cd = exam_cd and @prev_hall_cd = hall_cd and @prev_hall_date = hall_date then @rownum := @rownum + 1 else @rownum := 1 end as rn
                                                 , @prev_exam_cd := exam_cd
                                                 , @prev_hall_cd := hall_cd
                                                 , @prev_hall_date := hall_date
                                              from (select exam_map.hall_date, score.exam_cd, score.hall_cd, score.scorer_nm, count(*) as cnt
                                                         from score
                                                        inner join exam_map on exam_map.exam_cd = score.exam_cd and exam_map.hall_cd = score.hall_cd and exam_map.virt_no = score.virt_no
                                                        group by exam_map.hall_date,  score.exam_cd, score.hall_cd,  score.scorer_nm
                                                        order by exam_map.hall_date, exam_cd, hall_cd,  scorer_nm) a
                                                  , (select @rownum := 1, @prev_exam_cd := '', @prev_hall_cd := '', @prev_hall_date := '') b
                                       )c
                                 group by exam_cd, hall_cd, hall_date) d on exam_hall_date.exam_cd = d.exam_cd and exam_hall_date.hall_cd = d.hall_cd and exam_hall_date.hall_date = d.hall_date
                                 ) e
         inner join exam on e.exam_cd = exam.exam_cd
         inner join admission on exam.admission_cd  = admission.admission_cd
         inner join hall on e.hall_cd = hall.hall_cd
         <where>case when exam.scorer_cnt = scored_cnt and exam.scorer_cnt = 1 and virt_no_cnt = scored_cnt1 then 1
                    when exam.scorer_cnt = scored_cnt and exam.scorer_cnt = 2 and virt_no_cnt = scored_cnt1 and virt_no_cnt = scored_cnt2 then 1
                    when exam.scorer_cnt = scored_cnt and exam.scorer_cnt = 3 and virt_no_cnt = scored_cnt1 and virt_no_cnt = scored_cnt2 and virt_no_cnt = scored_cnt3 then 1
                    when exam.scorer_cnt = scored_cnt and exam.scorer_cnt = 4 and virt_no_cnt = scored_cnt1 and virt_no_cnt = scored_cnt2 and virt_no_cnt = scored_cnt3 and virt_no_cnt = scored_cnt4 then 1
                    when exam.scorer_cnt = scored_cnt and exam.scorer_cnt = 5 and virt_no_cnt = scored_cnt1 and virt_no_cnt = scored_cnt2 and virt_no_cnt = scored_cnt3 and virt_no_cnt = scored_cnt4 and virt_no_cnt = scored_cnt5 then 1
                    else 0
                end = 0
            <if test="param != null">
                <if test="param.userAdmissions != null">AND admission.admission_cd IN (${param.userAdmissions})</if>
                <if test="param.admissionNm != null">AND admission.admission_nm = #{param.admissionNm}</if>
                <if test="param.typeNm != null">AND exam.type_nm = #{param.typeNm}</if>
                <if test="param.examDate != null">AND e.hall_date = #{param.examDate}</if>
                <if test="param.headNm != null">AND hall.head_nm = #{param.headNm}</if>
                <if test="param.bldgNm != null">AND hall.bldg_nm = #{param.bldgNm}</if>
                <if test="param.hallNm != null">AND hall.hall_nm = #{param.hallNm}</if>
                <if test="param.scorerNm != null">AND score.scorer_nm LIKE '%' #{param.scorerNm} '%'</if>
            </if>
             AND scored_cnt > 0
         </where>
    </select>

    <select id="scoredF" resultType="com.humane.util.CamelMap">
            SELECT result.*
            FROM(SELECT  admission.admission_nm, admission.admission_cd
                        , exam.type_nm, /*exam.exam_date,*/ hall_date as exam_date
                        , hall.head_nm, hall.bldg_nm, hall.hall_nm, e.virt_no
                        , e.scorer_nm1, e.total_score1, e.scorer_nm2, e.total_score2, e.scorer_nm3, e.total_score3, e.scorer_nm4, e.total_score4, e.scorer_nm5, e.total_score5
                        , e.scorer_nm6, e.total_score6, e.scorer_nm7, e.total_score7, e.scorer_nm8, e.total_score8, e.scorer_nm9, e.total_score9, e.scorer_nm10, e.total_score10
                        , e.scored_cnt
                        , SUM( if(e.total_score1 =#{param.absentValue}, 1, 0) + if(e.total_score2 =#{param.absentValue}, 1, 0) + if(e.total_score3 =#{param.absentValue}, 1, 0) + if(e.total_score4 =#{param.absentValue}, 1, 0) + if(e.total_score5 =#{param.absentValue}, 1, 0) +
                               if(e.total_score6 =#{param.absentValue}, 1, 0) + if(e.total_score7 =#{param.absentValue}, 1, 0) + if(e.total_score8 =#{param.absentValue}, 1, 0) + if(e.total_score9 =#{param.absentValue}, 1, 0) + if(e.total_score10 =#{param.absentValue}, 1, 0)
                          ) AS cnt
                FROM ( SELECT exam_hall_date.exam_cd, exam_hall_date.hall_cd, exam.scorer_cnt, exam_hall_date.hall_date, d.virt_no
                            , if(scored_cnt1 != 0, 1, 0) + if(scored_cnt2 != 0, 1, 0) + if(scored_cnt3 != 0, 1, 0) + if(scored_cnt4 != 0, 1, 0) + if(scored_cnt5 != 0, 1, 0)
                            + if(scored_cnt6 != 0, 1, 0) + if(scored_cnt7 != 0, 1, 0) + if(scored_cnt8 != 0, 1, 0) + if(scored_cnt9 != 0, 1, 0) + if(scored_cnt10 != 0, 1, 0) AS scored_cnt
                            , scorer_nm1, total_score1, scorer_nm2, total_score2, scorer_nm3, total_score3, scorer_nm4, total_score4, scorer_nm5, total_score5
                            , scorer_nm6, total_score6, scorer_nm7, total_score7, scorer_nm8, total_score8, scorer_nm9, total_score9, scorer_nm10, total_score10
                        FROM exam_hall_date
                        INNER JOIN exam on exam.exam_cd = exam_hall_date.exam_cd
                        LEFT JOIN (SELECT exam_cd, hall_cd, hall_date, virt_no
                                    , MIN(if(rn = 1, scorer_nm, NULL)) AS scorer_nm1, MIN(if(rn = 1, total_score, NULL)) AS total_score1
                                    , MIN(if(rn = 2, scorer_nm, NULL)) AS scorer_nm2, MIN(if(rn = 2, total_score, NULL)) AS total_score2
                                    , MIN(if(rn = 3, scorer_nm, NULL)) AS scorer_nm3, MIN(if(rn = 3, total_score, NULL)) AS total_score3
                                    , MIN(if(rn = 4, scorer_nm, NULL)) AS scorer_nm4, MIN(if(rn = 4, total_score, NULL)) AS total_score4
                                    , MIN(if(rn = 5, scorer_nm, NULL)) AS scorer_nm5, MIN(if(rn = 5, total_score, NULL)) AS total_score5
                                    , MIN(if(rn = 6, scorer_nm, NULL)) AS scorer_nm6, MIN(if(rn = 5, total_score, NULL)) AS total_score6
                                    , MIN(if(rn = 7, scorer_nm, NULL)) AS scorer_nm7, MIN(if(rn = 5, total_score, NULL)) AS total_score7
                                    , MIN(if(rn = 8, scorer_nm, NULL)) AS scorer_nm8, MIN(if(rn = 5, total_score, NULL)) AS total_score8
                                    , MIN(if(rn = 9, scorer_nm, NULL)) AS scorer_nm9, MIN(if(rn = 5, total_score, NULL)) AS total_score9
                                    , MIN(if(rn = 10, scorer_nm, NULL)) AS scorer_nm10, MIN(if(rn = 5, total_score, NULL)) AS total_score10

                                    , MIN(if(rn = 1, cnt, NULL)) AS scored_cnt1, MIN(if(rn = 2, cnt, NULL)) AS scored_cnt2
                                    , MIN(if(rn = 3, cnt, NULL)) AS scored_cnt3, MIN(if(rn = 4, cnt, NULL)) AS scored_cnt4
                                    , MIN(if(rn = 5, cnt, NULL)) AS scored_cnt5, MIN(if(rn = 6, cnt, NULL)) AS scored_cnt6
                                    , MIN(if(rn = 7, cnt, NULL)) AS scored_cnt7, MIN(if(rn = 8, cnt, NULL)) AS scored_cnt8
                                    , MIN(if(rn = 9, cnt, NULL)) AS scored_cnt9, MIN(if(rn = 10, cnt, NULL)) AS scored_cnt10
                                    FROM ( SELECT a.*
                                            , CASE WHEN @prev_exam_cd = exam_cd AND @prev_hall_cd = hall_cd AND @prev_hall_date = hall_date AND @prev_virt_no = virt_no then @rownum := @rownum + 1 else @rownum := 1 end AS rn
                                            , @prev_exam_cd := exam_cd
                                            , @prev_hall_cd := hall_cd
                                            , @prev_hall_date := hall_date
                                            , @prev_virt_no := virt_no
                                            FROM (SELECT exam_map.hall_date, score.exam_cd, score.hall_cd, exam.scorer_cnt, score.virt_no, score.scorer_nm, score.total_score
                                                , (SELECT count(*) FROM score f WHERE f.virt_no = score.virt_no GROUP BY virt_no) AS cnt
                                                    FROM score
                                                    INNER JOIN exam ON exam.exam_cd = score.exam_cd
                                                    INNER JOIN exam_map ON exam_map.exam_cd = score.exam_cd AND exam_map.hall_cd = score.hall_cd AND exam_map.virt_no = score.virt_no
                                                    GROUP BY exam_map.hall_date,  score.exam_cd, score.hall_cd, score.virt_no, score.scorer_nm, score.total_score
                                                    ORDER BY exam_map.hall_date, exam_cd, hall_cd, virt_no, scorer_nm) a
                                                    , (SELECT @rownum := 1, @prev_exam_cd := '', @prev_hall_cd := '', @prev_hall_date := '', @prev_virt_no := '') b
                                                  )c
                                            GROUP BY exam_cd, hall_cd, hall_date, virt_no) d on exam_hall_date.exam_cd = d.exam_cd AND exam_hall_date.hall_cd = d.hall_cd AND exam_hall_date.hall_date = d.hall_date
                                    ) e
            INNER JOIN exam ON e.exam_cd = exam.exam_cd
            INNER JOIN admission ON exam.admission_cd  = admission.admission_cd
            INNER JOIN hall ON e.hall_cd = hall.hall_cd
            GROUP BY admission.admission_nm
                    , exam.type_nm, exam.exam_date, hall_date
                    , hall.head_nm, hall.bldg_nm, hall.hall_nm, e.virt_no
            ) result
        <where>
            AND virt_no IS NOT NULL
            AND (    total_score1 = #{param.absentValue} OR total_score2 = #{param.absentValue} OR total_score3 = #{param.absentValue} OR total_score4 = #{param.absentValue} OR total_score5 = #{param.absentValue}
                    OR total_score6 = #{param.absentValue} OR total_score7 = #{param.absentValue} OR total_score8 = #{param.absentValue} OR total_score9 = #{param.absentValue} OR total_score10 = #{param.absentValue}
                )
            AND scored_cnt != cnt
            <if test="param != null">
                <if test="param.userAdmissions != null">AND result.admission_cd IN (${param.userAdmissions})</if>
                <if test="param.admissionNm != null">AND result.admission_nm = #{param.admissionNm}</if>
                <if test="param.typeNm != null">AND result.type_nm = #{param.typeNm}</if>
                <if test="param.examDate != null">AND result.exam_date = #{param.examDate}</if>
                <if test="param.headNm != null">AND result.head_nm = #{param.headNm}</if>
                <if test="param.bldgNm != null">AND result.bldg_nm = #{param.bldgNm}</if>
                <if test="param.hallNm != null">AND result.hall_nm = #{param.hallNm}</if>
            </if>
        </where>
    </select>
</mapper>